# This is a basic workflow to help you get started with Actions

name: CI-CD-Pipeline-to-AWS-ElasticBeanstalk
env:
  EB_PACKAGE_S3_BUCKET_NAME : "adv-it-flask-application-packages-learning"
  EB_APPLICATION_NAME       : "MyFlask-Learning"
  EB_ENVIRONMENT_NAME       : "Myflasklearning-env"
  DEPLOY_PACKAGE_NAME       : "flask_app_${{ github.sha }}.zip"
  AWS_REGION_NAME           : "us-west-2"
  
  
on:
  push:
    branches: [ main ]
  
jobs:
  my_ci_part:
    runs-on: ubuntu-latest

    steps:
    - name: Git clone our repo
      uses: actions/checkout@v1

    - name: Create ZIP deployment package
      run : zip -r ${{ env.DEPLOY_PACKAGE_NAME }} ./ -x *.git*
        
    - name: Configure my AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id     : ${{ secrets.MY_AWS_ACCESS_KEY }}
        aws-secret-access-key : ${{ secrets.MY_AWS_SECRET_KEY }}
        aws-region            : ${{ env.AWS_REGION_NAME }}
          
    - name: Copy Deployment package to S3 bucket
      run : aws s3 cp ${{ env.DEPLOY_PACKAGE_NAME }} s3://${{ env.EB_PACKAGE_S3_BUCKET_NAME }}/
        
    - name: Print Message for CI is completed
      run : echo "CI Pipeline part finished successfully!"
        
  my_cd_part:
    runs-on: ubuntu-latest
    needs  : [my_ci_part] # Means the job starts after privious job has been finished successfully

    steps:
    - name: Configure my AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id     : ${{ secrets.MY_AWS_ACCESS_KEY }}
        aws-secret-access-key : ${{ secrets.MY_AWS_SECRET_KEY }}
        aws-region            : ${{ env.AWS_REGION_NAME }}
        
    - name: Create New ElasticBeanstalk Application Version
      run : |
        aws elasticbeanstalk create-application-version \
        --application-name ${{ env.EB_APPLICATION_NAME }} \
        --source-bundle S3Bucket="${{ env.EB_PACKAGE_S3_BUCKET_NAME }}",S3Key="${{ env.DEPLOY_PACKAGE_NAME }}" \
        --version-label "Ver-${{ github.sha }}" \
        --description "CommitSHA-${{ github.sha }}"
        
    - name: Deploy New ElasticBeanstalk Application Version
      run : aws elasticbeanstalk update-environment \
            --environment-name ${{ env.EB_ENVIRONMENT_NAME }} \
            --version-label "Ver-${{ github.sha }}"
            
    - name: Print Message for CD is completed
      run : echo "CD Pipeline part finished successfully!"
